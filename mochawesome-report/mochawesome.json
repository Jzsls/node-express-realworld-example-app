{
  "stats": {
    "suites": 5,
    "tests": 14,
    "passes": 13,
    "pending": 1,
    "failures": 0,
    "start": "2022-05-19T18:56:50.255Z",
    "end": "2022-05-19T18:56:50.857Z",
    "duration": 602,
    "testsRegistered": 14,
    "passPercent": 100,
    "pendingPercent": 7.142857142857142,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b9ab200b-a7be-4e83-a68c-0a989549ae76",
      "title": "",
      "fullFile": "C:\\Users\\zialo\\OneDrive\\Documents\\GitHub\\node-express-realworld-example-app\\test\\e2e_users_routes_test.js",
      "file": "\\test\\e2e_users_routes_test.js",
      "beforeHooks": [
        {
          "title": "\"before all\" hook: beforeAll in \"{root}\"",
          "fullTitle": "\"before all\" hook: beforeAll in \"{root}\"",
          "timedOut": false,
          "duration": 28,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "var db = mongoose.createConnection('mongodb://localhost/test');\ndb.collection('users')\n.deleteOne({}, function (res) { done(); });",
          "err": {},
          "uuid": "2e1f56f0-2e26-4da3-b5be-9f53c829f641",
          "parentUUID": "b9ab200b-a7be-4e83-a68c-0a989549ae76",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6d18e2ea-d313-4fd2-8b41-fabb86f62f95",
          "title": "e2e test : users API route",
          "fullFile": "C:\\Users\\zialo\\OneDrive\\Documents\\GitHub\\node-express-realworld-example-app\\test\\e2e_users_routes_test.js",
          "file": "\\test\\e2e_users_routes_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "1125fb88-b738-45f2-9d06-45d3c63c8f87",
              "title": "PUT /api/users",
              "fullFile": "C:\\Users\\zialo\\OneDrive\\Documents\\GitHub\\node-express-realworld-example-app\\test\\e2e_users_routes_test.js",
              "file": "\\test\\e2e_users_routes_test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should register a new user",
                  "fullTitle": "e2e test : users API route PUT /api/users should register a new user",
                  "timedOut": false,
                  "duration": 136,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n.post('/api/users')\n.send({\n    \"user\":{\n        \"username\":\"luck\",\n        \"email\": \"luck_j@gmail.com\",\n        \"password\": \"luck123\"} })\n.end((err, res) =>{\n    res.should.have.status(200);\n    res.body.should.be.a('object');\n    res.body.user.should.have.property('username');\n    res.body.user.should.have.property('email');\n    res.body.user.should.have.property('token');\ndone();    \n});",
                  "err": {},
                  "uuid": "68e02c10-9a30-45bb-8849-00fa60a31a3a",
                  "parentUUID": "1125fb88-b738-45f2-9d06-45d3c63c8f87",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not register already registered user",
                  "fullTitle": "e2e test : users API route PUT /api/users should not register already registered user",
                  "timedOut": false,
                  "duration": 90,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n.post('/api/users')\n.send({\n    \"user\":{\n        \"username\":\"luck\",\n        \"email\": \"luck_j@gmail.com\",\n        \"password\": \"luck123\"} })\n.end((err, res) =>{\n    res.should.have.status(422);\n    res.body.should.be.a('object');\n    res.body.should.have.property('errors');\n    res.body.errors.should.have.property('username').eq('is already taken.');\n    res.body.errors.should.have.property('email').eq('is already taken.');\ndone();    \n});",
                  "err": {},
                  "uuid": "4e469099-837f-43e4-b699-e881a34155ce",
                  "parentUUID": "1125fb88-b738-45f2-9d06-45d3c63c8f87",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not register user with no username",
                  "fullTitle": "e2e test : users API route PUT /api/users should not register user with no username",
                  "timedOut": false,
                  "duration": 80,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n.post('/api/users')\n.send({\n    \"user\":{\n        \"username\":\"\",\n        \"email\": \"deni@gmail.com\",\n        \"password\": \"deni123\"} })\n.end((err, res) =>{\n    res.should.have.status(422);\n    res.body.should.be.a('object');\n    res.body.should.have.property('errors');\n    res.body.errors.should.have.property('username').eq(\"can't be blank\");\ndone();    \n});",
                  "err": {},
                  "uuid": "04b93952-1463-4540-9ff4-00b80740c027",
                  "parentUUID": "1125fb88-b738-45f2-9d06-45d3c63c8f87",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not register user with no email",
                  "fullTitle": "e2e test : users API route PUT /api/users should not register user with no email",
                  "timedOut": false,
                  "duration": 80,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n.post('/api/users')\n.send({\n    \"user\":{\n        \"username\":\"deni\",\n        \"email\": \"\",\n        \"password\": \"deni123\"} })\n.end((err, res) =>{\n    res.should.have.status(422);\n    res.body.should.be.a('object');\n    res.body.should.have.property('errors');\n    res.body.errors.should.have.property('email').eq(\"can't be blank\");\ndone();    \n});",
                  "err": {},
                  "uuid": "143b65df-3d5b-40dc-be83-889137cf532d",
                  "parentUUID": "1125fb88-b738-45f2-9d06-45d3c63c8f87",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not register user with no password",
                  "fullTitle": "e2e test : users API route PUT /api/users should not register user with no password",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "021363de-48bb-4436-80af-a9f8c9192049",
                  "parentUUID": "1125fb88-b738-45f2-9d06-45d3c63c8f87",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "68e02c10-9a30-45bb-8849-00fa60a31a3a",
                "4e469099-837f-43e4-b699-e881a34155ce",
                "04b93952-1463-4540-9ff4-00b80740c027",
                "143b65df-3d5b-40dc-be83-889137cf532d"
              ],
              "failures": [],
              "pending": [
                "021363de-48bb-4436-80af-a9f8c9192049"
              ],
              "skipped": [],
              "duration": 386,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "b9034dce-48b6-4501-831c-2a2982689607",
              "title": "PUT /api/users/login",
              "fullFile": "C:\\Users\\zialo\\OneDrive\\Documents\\GitHub\\node-express-realworld-example-app\\test\\e2e_users_routes_test.js",
              "file": "\\test\\e2e_users_routes_test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should login a registered user",
                  "fullTitle": "e2e test : users API route PUT /api/users/login should login a registered user",
                  "timedOut": false,
                  "duration": 87,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n.post('/api/users/login')\n.send({\n    \"user\":{\n        \"email\": \"luck_j@gmail.com\",\n        \"password\": \"luck123\"} })\n.end((err, res) =>{\n    res.should.have.status(200);\n    res.body.should.be.a('object');\n    res.body.should.have.property('user');\n    res.body.user.should.have.property('username');\n    res.body.user.should.have.property('email');\n    res.body.user.should.have.property('token');\n    key = res.body.user.token;\ndone();    \n});",
                  "err": {},
                  "uuid": "142e90bf-a039-4b4a-a991-818ec637e107",
                  "parentUUID": "b9034dce-48b6-4501-831c-2a2982689607",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not login an unregistered user",
                  "fullTitle": "e2e test : users API route PUT /api/users/login should not login an unregistered user",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n.post('/api/users/login')\n.send({\n    \"user\":{\n        \"email\": \"daby@gmail.com\",\n        \"password\": \"daby123\"} })\n.end((err, res) =>{\n    res.should.have.status(422);\n    res.body.should.be.a('object');\n    res.body.should.have.property('errors');\n    res.body.errors.should.have.property('email or password').eq('is invalid');\ndone();    \n});",
                  "err": {},
                  "uuid": "c3990cda-2295-46c5-bfc4-41a7d1ae90ad",
                  "parentUUID": "b9034dce-48b6-4501-831c-2a2982689607",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not login if email is missing",
                  "fullTitle": "e2e test : users API route PUT /api/users/login should not login if email is missing",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n.post('/api/users/login')\n.send({\n    \"user\":{\n        \"email\": \"\",\n        \"password\": \"luck123\"} })\n.end((err, res) =>{\n    res.should.have.status(422);\n    res.body.should.be.a('object');\n    res.body.should.have.property('errors');\n    res.body.errors.should.have.property('email').eq(\"can't be blank\");\ndone();    \n});",
                  "err": {},
                  "uuid": "960ab8a5-3a81-4bc4-ae26-bd707e7ce14e",
                  "parentUUID": "b9034dce-48b6-4501-831c-2a2982689607",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not login if password is missing",
                  "fullTitle": "e2e test : users API route PUT /api/users/login should not login if password is missing",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n.post('/api/users/login')\n.send({\n    \"user\":{\n        \"email\": \"luck_j@gmail.com\",\n        \"password\": \"\"} })\n.end((err, res) =>{\n    res.should.have.status(422);\n    res.body.should.be.a('object');\n    res.body.should.have.property('errors');\n    res.body.errors.should.have.property('password').eq(\"can't be blank\");\ndone();    \n});",
                  "err": {},
                  "uuid": "cb8d8a14-6040-401f-9f79-34a097ac98ec",
                  "parentUUID": "b9034dce-48b6-4501-831c-2a2982689607",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not login if both email and password are missing",
                  "fullTitle": "e2e test : users API route PUT /api/users/login should not login if both email and password are missing",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n.post('/api/users/login')\n.send({\n    \"user\":{\n        \"email\": \"\",\n        \"password\": \"\"} })\n.end((err, res) =>{\n    res.should.have.status(422);\n    res.body.should.be.a('object');\n    res.body.should.have.property('errors');\n    res.body.errors.should.have.property('email').eq(\"can't be blank\");\ndone();    \n});",
                  "err": {},
                  "uuid": "a74bf2c5-0495-4088-bdb1-b0b3f7af41e0",
                  "parentUUID": "b9034dce-48b6-4501-831c-2a2982689607",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "142e90bf-a039-4b4a-a991-818ec637e107",
                "c3990cda-2295-46c5-bfc4-41a7d1ae90ad",
                "960ab8a5-3a81-4bc4-ae26-bd707e7ce14e",
                "cb8d8a14-6040-401f-9f79-34a097ac98ec",
                "a74bf2c5-0495-4088-bdb1-b0b3f7af41e0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 110,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "f2de833b-3228-4756-ab0b-3dc9ca3ebad1",
              "title": "GET /api/user",
              "fullFile": "C:\\Users\\zialo\\OneDrive\\Documents\\GitHub\\node-express-realworld-example-app\\test\\e2e_users_routes_test.js",
              "file": "\\test\\e2e_users_routes_test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should fetch a specific authorized user only",
                  "fullTitle": "e2e test : users API route GET /api/user should fetch a specific authorized user only",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n.get('/api/user')\n.set('Authorization', 'Bearer ' + key, 'Content-Type','application/json')\n.end((err, res) =>{\n    res.should.have.status(200);\n    res.body.should.be.a('object');\n    res.body.should.have.property('user');\n    res.body.user.should.have.property('username').eq('luck');\n    res.body.user.should.have.property('email').eq('luck_j@gmail.com');\ndone();    \n}).timeout(600);",
                  "err": {},
                  "uuid": "1be4f5a1-f76e-44d5-90cf-abc3c8466d7e",
                  "parentUUID": "f2de833b-3228-4756-ab0b-3dc9ca3ebad1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not fetch a specific user if not authorized",
                  "fullTitle": "e2e test : users API route GET /api/user should not fetch a specific user if not authorized",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n.get('/api/user')\n//.set('Authorization', 'Bearer ' + \"\")\n.end((err, res) =>{\n    res.should.have.status(401);\ndone();    \n});",
                  "err": {},
                  "uuid": "28666808-bf43-41b3-a16e-6183018e8e09",
                  "parentUUID": "f2de833b-3228-4756-ab0b-3dc9ca3ebad1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1be4f5a1-f76e-44d5-90cf-abc3c8466d7e",
                "28666808-bf43-41b3-a16e-6183018e8e09"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 26,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "483dd7d4-fd1c-4370-a989-13177193167b",
              "title": "PUT /api/user",
              "fullFile": "C:\\Users\\zialo\\OneDrive\\Documents\\GitHub\\node-express-realworld-example-app\\test\\e2e_users_routes_test.js",
              "file": "\\test\\e2e_users_routes_test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should edit pre-populated properties of authorized user only",
                  "fullTitle": "e2e test : users API route PUT /api/user should edit pre-populated properties of authorized user only",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n.put('/api/user')\n.set('Authorization', 'Bearer ' + key)\n.send({\n    \"user\":{\n        \"username\": \"lucky\"} })\n.end((err, res) =>{\n    res.should.have.status(200);\n    res.body.should.be.a('object');\n    res.body.should.have.property('user');\n    res.body.user.should.have.property('email').eq('luck_j@gmail.com');\ndone();    \n});",
                  "err": {},
                  "uuid": "432c89fe-73ac-41e0-9098-9eccbaa53e87",
                  "parentUUID": "483dd7d4-fd1c-4370-a989-13177193167b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not edit pre-populated properties of un-authorized user",
                  "fullTitle": "e2e test : users API route PUT /api/user should not edit pre-populated properties of un-authorized user",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n.put('/api/user')\n.set('Authorization', 'Bearer ' + 'token')\n.send({\n    \"user\":{\n        \"username\": \"lucky\"} })\n.end((err, res) =>{\n    res.should.have.status(401);\ndone();    \n});",
                  "err": {},
                  "uuid": "6da9f12f-6230-4cfe-8507-8dd5796c29f1",
                  "parentUUID": "483dd7d4-fd1c-4370-a989-13177193167b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "432c89fe-73ac-41e0-9098-9eccbaa53e87",
                "6da9f12f-6230-4cfe-8507-8dd5796c29f1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 25,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}